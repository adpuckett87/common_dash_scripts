#! /bin/sh
# Script to display important server stats
#
# uptime (seconds)
# cpuX (seconds) (X = '', 1, ...)
# loadavg (percent)
# cpu_apache2 (percent)
# cpu_clamd (percent)
# cpu_mysqld (percent)
# cpu_nginx (percent)
# cpu_php (percent)
# cpu_postfix (percent)
# mem (bytes)
# mem% (percent)
# swap (bytes)
# swap% (percent)
# mem_apache2 (bytes)
# mem_clamd (bytes)
# mem_mysqld (bytes)
# mem_nginx (bytes)
# mem_php (bytes)
# mem_postfix (bytes)
# xvdaX_reads (count) (X = '', 1, ...)
# xvdaX_readtime (ms) (X = '', 1, ...)
# xvdaX_writes (count) (X = '', 1, ...)
# xvdaX_writetime (ms) (X = '', 1, ...)
# xvdaX_used (bytes) (X = 1, 2, ...)
# xvdaX_used% (percent) (X = 1, 2, ...)
# ethX_rx (bytes) (X = 0, 1, ...)
# ethX_tx (bytes) (X = 0, 1, ...)
# 01/30/17 - Created by Andrew Puckett
# 06/06/17 - Added mem% and dev% and cleaned up code
# 09/08/17 - Added nginx, php and postfix
# 04/14/18 - Made CPU measurements real-time

cat /proc/uptime | awk '{printf "%-20s %s\n", "uptime", $1}'
cat /proc/stat | awk '/cpu/ {printf "%-20s %s\n", $1,($2+$4)/100}'
cat /proc/loadavg | awk '{printf "%-20s %s\n", "loadavg", $1*100}'
top -n 1 -b | awk 'BEGIN { sum = 0 } /(apache2|httpd)/ { sum += $9 } END { printf "%-20s %s\n", "cpu_apache2", sum }'
top -n 1 -b | awk 'BEGIN { sum = 0 } /clamd/ { sum += $9 } END { printf "%-20s %s\n", "cpu_clamd", sum }'
top -n 1 -b | awk 'BEGIN { sum = 0 } /mysqld/ { sum += $9 } END { printf "%-20s %s\n", "cpu_mysqld", sum }'
top -n 1 -b | awk 'BEGIN { sum = 0 } /nginx/ { sum += $9 } END { printf "%-20s %s\n", "cpu_nginx", sum }'
top -n 1 -b | awk 'BEGIN { sum = 0 } /php-fpm/ { sum += $9 } END { printf "%-20s %s\n", "cpu_php", sum }'
top -n 1 -b | awk 'BEGIN { sum = 0 } /master/ { sum += $9 } END { printf "%-20s %s\n", "cpu_postfix", sum }'
free | awk '/Mem:/ {printf "%-20s %s\n%-20s %s\n", "mem", $2-$7, "mem%", 100*($2-$7)/$2}'
free | awk '/Swap:/ {if($2 != 0){printf "%-20s %s\n%-20s %s\n", "swap", $3, "swap%", 100*$3/$2}}'

if [ $(id -u) = "0" ]; then
	for var in apache2 clamd mysqld nginx php-fpm master; do
		mem=0
		for pid in $(pgrep $var); do
			#it's possible that the pid is no longer alive by the time we read it so ignore errors here
			mem=$((mem + $(awk '/^Pss:/{ sum += $2 } END { print sum }' /proc/$pid/smaps))) 2>/dev/null
		done
		case "$var" in
			php-fpm) var=php;;
			master) var=postfix;;
		esac
		printf "%-20s %s\n" mem_$var $mem
	done
else
	echo Run as root for additional data >&2
fi

cat /proc/diskstats | awk '/d/ {printf "%-20s %s\n%-20s %s\n%-20s %s\n%-20s %s\n", $3"_reads", $4, $3"_readtime", $7, $3"_writes", $8, $3"_writetime", $11}'

df | awk '/^\/dev/ {sub("/dev/","",$1);sub("%","",$5); printf "%-20s %s\n%-20s %s\n", $1"_used", $3*1024, $1"_used%", $5}'

ip -s -o -a link | awk '{sub(":","", $2) } {printf "%-20s %s\n%-20s %s\n", $2"_rx", $28, $2"_tx", $43}'
#some implementations provide different information so adjust the indices accordingly
#ip -s -o -a link | awk '{sub(":","", $2) } {printf "%-20s %s\n%-20s %s\n", $2"_rx", $26, $2"_tx", $41}'
